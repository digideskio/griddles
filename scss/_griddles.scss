@import 'compass/css3';
@import 'compass/utilities/general/clearfix';
@import '_settings.scss';
@import '_utils.scss';

// Supply a generally useful clearfix class.
.clearfix {
    @include pie-clearfix;
}

$griddles-percentage-steps: get-steps-list($griddles-step-increment);
@debug $griddles-percentage-steps;

$griddles-fraction-selectors: get-fraction-selectors($griddles-fraction-steps);
@debug $griddles-fraction-selectors;

// Remove white-space from grid elements so there's
// no need to cuddle inline-block elements
// using monospace font provides a reliable + consistent value
// TODO: Test this is true.
.#{$griddles-grid-classname} {
    font-family: "Courier New", monospace;
    letter-spacing: -0.65em;
    word-spacing:-0.65em; 
    @include box-sizing(border-box);
}

// Offset the grid when the gutter is enabled
// So there's no left/right gutter for first
// and last elements in a given row.
.#{$griddles-grid-classname}.gutter {
    margin: 0 -5px;
}

// When gutter class is added to the grid container
// this rule adds that padding to all the grid elems
// within.
.gutter > [class*="#{$griddles-class-prefix}-"] {
    padding: $griddles-gutter-size / 2;
}

// Set the scene for using inline-block
// box sizing (ie8+) ensures that padding directly
// on the grid components won't affect the widths.
.#{$griddles-class-prefix}-cont {
    display: inline-block;
    vertical-align: top;
    letter-spacing: normal;
    word-spacing: normal;
    margin: 0;
    @include box-sizing(border-box);
    font-family: $griddles-font-family;
    width: 100%;
}

.#{$griddles-class-prefix}-hide {
    display: none;
}
.#{$griddles-class-prefix}-show {
    display: inline-block;
}
// invisible and in flow
.#{$griddles-class-prefix}-invisible {
    visibility: hidden;
}
.#{$griddles-class-prefix}-visible {
    visibility: normal;
}

// Generate the shared rules for all of the standard classes.
@each $i in $griddles-percentage-steps {
    #{get-step-selector($i, null)} {
        @extend .#{$griddles-class-prefix}-cont;
    }
}

// Defaults widths for standard classes
@include respond-to(nth($griddles-M, 2)) {
    @each $i in $griddles-percentage-steps {
        .#{$griddles-class-prefix}-#{$i} {
            width: percentage(nth($i,1)) / 100;
        }
    }
}

// The rest
@each $k in $griddles-breakpoint-prefixes {
    @include respond-to(nth($k, 2), nth($k, 3)) {
        $breakpoint: nth($k, 1);
        @each $i in $griddles-percentage-steps {
            #{get-step-selector($i, $breakpoint)} {
                width: percentage(nth($i,1)) / 100;
            }
        }
        .#{$breakpoint}-show {
            display: inline-block;
        }
        .#{$breakpoint}-hide {
            display: none;
        }
        .#{$breakpoint}-invisible {
            visibility: hidden;
        }
        .#{$breakpoint}-visible {
            visibility: visible;
        }
        
    }
}
